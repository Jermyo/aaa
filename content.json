{"meta":{"title":"Jer","subtitle":null,"description":null,"author":"Jer","url":"https://github.com/Jermyo/blog.git"},"pages":[{"title":"","date":"2017-10-13T06:20:33.228Z","updated":"2017-10-13T06:20:33.228Z","comments":true,"path":"about/index.html","permalink":"https://github.com/Jermyo/blog.git/about/index.html","excerpt":"","text":"关于我从事 WEB 开发，主要开发语言 JavaScript、H5及CSS3，熟练使用 Vue、ReactJs、Jquery 等主流框架；对 JS、Node 情有独钟；有一定的代码洁癖。 对服务端、前端、数据分析、人工智能等技能有所了解。 热爱开源项目、热爱新技术、热爱新事物。 关于工作城市：北京 关于学习正在往终身学习者前进…近期学习方向：Python (人工智能) 关于座右铭 The Harder You Work, The Luckier You Will Be. (越努力，越幸运) 关于爱好热爱运动，尤其喜爱乒乓、阅读、电影（Top250）、旅行。 联系我 Home: jermyo.com Blog: jermyo.com Email: jermy0616@gmail.com GitHub: Jermyo WeiBo: Jermyo Twitter: Jermyo"}],"posts":[{"title":"Bootstrap Ace模板实现菜单和Tab页效果","slug":"Bootstrap Ace模板实现菜单和Tab页效果","date":"2017-10-22T16:00:00.000Z","updated":"2017-10-23T06:35:14.994Z","comments":true,"path":"2017/10/23/Bootstrap Ace模板实现菜单和Tab页效果/","link":"","permalink":"https://github.com/Jermyo/blog.git/2017/10/23/Bootstrap Ace模板实现菜单和Tab页效果/","excerpt":"","text":"Bootstrap Ace模板实现菜单和Tab页效果这篇文章主要为大家分享了基于Bootstrap Ace模板实现菜单和Tab页效果，感兴趣的小伙伴们可以参考一下本文分享了项目中使用Ace模板的菜单样式和基于iframe的Tab页效果。 一、效果展示1、折腾了好久，终于将菜单样式和Tab页的效果从项目中抽出来了。 2、展开菜单（支持多级展开，后面代码介绍） 3、点击子菜单，以Tab页的形式打开对应的页面 4、支持菜单折叠 5、打开的菜单过多时自动换行显示，折叠后自适应 二、代码示例有现成的东西用很方便的，总的来说Bootstrap Ace模板的功能还是比较强大的，并且支持各种终端设备。本文主要使用的它的菜单的效果，下面就来看看Ace模板菜单效果的实现代码。 1、菜单效果由于Ace是基于Bootstrap的，所以首先需要引用jquery和bootstrap组件，先来总的看看它需要引用哪些文件吧 1234567891011121314&lt;script src=&quot;/Scripts/jquery-1.9.1.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/Content/bootstrap/js/bootstrap.min.js&quot;&gt;&lt;/script&gt; &lt;link href=&quot;/Content/bootstrap/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; /&gt; &lt;link href=&quot;/Content/font-awesome/css/font-awesome.min.css&quot; rel=&quot;stylesheet&quot; /&gt; &lt;link href=&quot;/Content/ace/css/ace-rtl.min.css&quot; rel=&quot;stylesheet&quot; /&gt; &lt;link href=&quot;/Content/ace/css/ace-skins.min.css&quot; rel=&quot;stylesheet&quot; /&gt; &lt;link href=&quot;/Content/sidebar-menu/sidebar-menu.css&quot; rel=&quot;stylesheet&quot;/&gt; &lt;script src=&quot;/Content/ace/js/ace-extra.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/Content/ace/js/ace.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/Content/sidebar-menu/sidebar-menu.js&quot;&gt;&lt;/script&gt; 呵呵，看着还是挺多的吧。除了最后一个js文件（）是博主自己封装的，其他基本都是些组件需要的特性组件。看看页面上面要放哪些html标签： 123456&lt;div class=&quot;sidebar&quot; id=&quot;sidebar&quot;&gt; &lt;ul class=&quot;nav nav-list&quot; id=&quot;menu&quot;&gt;&lt;/ul&gt; &lt;div class=&quot;sidebar-collapse&quot; id=&quot;sidebar-collapse&quot;&gt; &lt;i class=&quot;icon-double-angle-left&quot; data-icon1=&quot;icon-double-angle-left&quot; data-icon2=&quot;icon-double-angle-right&quot;&gt;&lt;/i&gt; &lt;/div&gt; &lt;/div&gt; 再来看看sidebar-menu.js这个文件里面封装的方法： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465(function ($) &#123; $.fn.sidebarMenu = function (options) &#123; options = $.extend(&#123;&#125;, $.fn.sidebarMenu.defaults, options || &#123;&#125;); var target = $(this); target.addClass(&apos;nav&apos;); target.addClass(&apos;nav-list&apos;); if (options.data) &#123; init(target, options.data); &#125; else &#123; if (!options.url) return; $.getJSON(options.url, options.param, function (data) &#123; init(target, data); &#125;); &#125; var url = window.location.pathname; //menu = target.find(&quot;[href=&apos;&quot; + url + &quot;&apos;]&quot;); //menu.parent().addClass(&apos;active&apos;); //menu.parent().parentsUntil(&apos;.nav-list&apos;, &apos;li&apos;).addClass(&apos;active&apos;).addClass(&apos;open&apos;); function init(target, data) &#123; $.each(data, function (i, item) &#123; var li = $(&apos;&lt;li&gt;&lt;/li&gt;&apos;); var a = $(&apos;&lt;a&gt;&lt;/a&gt;&apos;); var icon = $(&apos;&lt;i&gt;&lt;/i&gt;&apos;); //icon.addClass(&apos;glyphicon&apos;); icon.addClass(item.icon); var text = $(&apos;&lt;span&gt;&lt;/span&gt;&apos;); text.addClass(&apos;menu-text&apos;).text(item.text); a.append(icon); a.append(text); if (item.menus&amp;&amp;item.menus.length&gt;0) &#123; a.attr(&apos;href&apos;, &apos;#&apos;); a.addClass(&apos;dropdown-toggle&apos;); var arrow = $(&apos;&lt;b&gt;&lt;/b&gt;&apos;); arrow.addClass(&apos;arrow&apos;).addClass(&apos;icon-angle-down&apos;); a.append(arrow); li.append(a); var menus = $(&apos;&lt;ul&gt;&lt;/ul&gt;&apos;); menus.addClass(&apos;submenu&apos;); init(menus, item.menus); li.append(menus); &#125; else &#123; var href = &apos;javascript:addTabs(&#123;id:\\&apos;&apos; + item.id + &apos;\\&apos;,title: \\&apos;&apos; + item.text + &apos;\\&apos;,close: true,url: \\&apos;&apos; + item.url + &apos;\\&apos;&#125;);&apos;; a.attr(&apos;href&apos;, href); //if (item.istab) // a.attr(&apos;href&apos;, href); //else &#123; // a.attr(&apos;href&apos;, item.url); // a.attr(&apos;title&apos;, item.text); // a.attr(&apos;target&apos;, &apos;_blank&apos;) //&#125; li.append(a); &#125; target.append(li); &#125;); &#125; &#125; $.fn.sidebarMenu.defaults = &#123; url: null, param: null, data: null &#125;;&#125;)(jQuery); 在页面上面直接调用sidebar-menu的方法 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109$(function () &#123; $(&apos;#menu&apos;).sidebarMenu(&#123; data: [&#123; id: &apos;1&apos;, text: &apos;系统设置&apos;, icon: &apos;icon-cog&apos;, url: &apos;&apos;, menus: [&#123; id: &apos;11&apos;, text: &apos;编码管理&apos;, icon: &apos;icon-glass&apos;, url: &apos;/CodeType/Index&apos; &#125;] &#125;, &#123; id: &apos;2&apos;, text: &apos;基础数据&apos;, icon: &apos;icon-leaf&apos;, url: &apos;&apos;, menus: [&#123; id: &apos;21&apos;, text: &apos;基础特征&apos;, icon: &apos;icon-glass&apos;, url: &apos;/BasicData/BasicFeature/Index&apos; &#125;, &#123; id: &apos;22&apos;, text: &apos;特征管理&apos;, icon: &apos;icon-glass&apos;, url: &apos;/BasicData/Features/Index&apos; &#125;, &#123; id: &apos;23&apos;, text: &apos;物料维护&apos;, icon: &apos;icon-glass&apos;, url: &apos;/Model/Index&apos; &#125;, &#123; id: &apos;24&apos;, text: &apos;站点管理&apos;, icon: &apos;icon-glass&apos;, url: &apos;/Station/Index&apos; &#125;] &#125;, &#123; id: &apos;3&apos;, text: &apos;权限管理&apos;, icon: &apos;icon-user&apos;, url: &apos;&apos;, menus: [&#123; id: &apos;31&apos;, text: &apos;用户管理&apos;, icon: &apos;icon-user&apos;, url: &apos;/SystemSetting/User&apos; &#125;, &#123; id: &apos;32&apos;, text: &apos;角色管理&apos;, icon: &apos;icon-apple&apos;, url: &apos;/SystemSetting/Role&apos; &#125;, &#123; id: &apos;33&apos;, text: &apos;菜单管理&apos;, icon: &apos;icon-list&apos;, url: &apos;/SystemSetting/Menu&apos; &#125;, &#123; id: &apos;34&apos;, text: &apos;部门管理&apos;, icon: &apos;icon-glass&apos;, url: &apos;/SystemSetting/Department&apos; &#125;] &#125;, &#123; id: &apos;4&apos;, text: &apos;订单管理&apos;, icon: &apos;icon-envelope&apos;, url: &apos;&apos;, menus: [&#123; id: &apos;41&apos;, text: &apos;订单查询&apos;, icon: &apos;icon-glass&apos;, url: &apos;/Order/Query&apos; &#125;, &#123; id: &apos;42&apos;, text: &apos;订单排产&apos;, icon: &apos;icon-glass&apos;, url: &apos;/Order/PLANTPRODUCT&apos; &#125;, &#123; id: &apos;43&apos;, text: &apos;订单撤排&apos;, icon: &apos;icon-glass&apos;, url: &apos;/Order/cancelPRODUCT&apos; &#125;, &#123; id: &apos;44&apos;, text: &apos;订单HOLD&apos;, icon: &apos;icon-glass&apos;, url: &apos;/Order/hold&apos; &#125;, &#123; id: &apos;45&apos;, text: &apos;订单删除&apos;, icon: &apos;icon-glass&apos;, url: &apos;/Order/delete&apos; &#125;, &#123; id: &apos;47&apos;, text: &apos;订单插单&apos;, icon: &apos;icon-glass&apos;, url: &apos;/Order/insertorder&apos; &#125;, &#123; id: &apos;48&apos;, text: &apos;订单导入&apos;, icon: &apos;icon-glass&apos;, url: &apos;/Order/Import&apos; &#125;] &#125;] &#125;); &#125;); 这里需要说明的很重要的一点就是关于菜单前面的小图标：con的值为icon-user的时候，菜单上面就会显示一个如图的小图标。当然一般情况下，菜单肯定是动态加载的的，如果需要从后台取数据，可以直接调用此方法： $(‘#menu’).sidebarMenu({ url: “/api/UserApi/GetMenuByUser/“, param: { strUser: ‘admin’ } });即可，呵呵，很简单吧。 2、Tab页效果Tab页的效果其实是和左边菜单息息相关的，首先还是看看Tab页效果的js引用。 1&lt;script src=&quot;/Scripts/bootstrap-tab.js&quot;&gt;&lt;/script&gt; 页面的html标签： 1234567891011121314&lt;div class=&quot;main-content&quot;&gt;&lt;div class=&quot;page-content&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-xs-12&quot; style=&quot;padding-left:5px;&quot;&gt; &lt;ul class=&quot;nav nav-tabs&quot; role=&quot;tablist&quot;&gt; &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#Index&quot; role=&quot;tab&quot; data-toggle=&quot;tab&quot;&gt;首页&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;tab-content&quot;&gt; &lt;div role=&quot;tabpanel&quot; class=&quot;tab-pane active&quot; id=&quot;Index&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; bootstrap-tab.js这个文件里面封装了addTabs方法 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455var addTabs = function (options) &#123; //var rand = Math.random().toString(); //var id = rand.substring(rand.indexOf(&apos;.&apos;) + 1); var url = window.location.protocol + &apos;//&apos; + window.location.host; options.url = url + options.url; id = &quot;tab_&quot; + options.id; $(&quot;.active&quot;).removeClass(&quot;active&quot;); //如果TAB不存在，创建一个新的TAB if (!$(&quot;#&quot; + id)[0]) &#123; //固定TAB中IFRAME高度 mainHeight = $(document.body).height() - 90; //创建新TAB的title title = &apos;&lt;li role=&quot;presentation&quot; id=&quot;tab_&apos; + id + &apos;&quot;&gt;&lt;a href=&quot;#&apos; + id + &apos;&quot; aria-controls=&quot;&apos; + id + &apos;&quot; role=&quot;tab&quot; data-toggle=&quot;tab&quot;&gt;&apos; + options.title; //是否允许关闭 if (options.close) &#123; title += &apos; &lt;i class=&quot;glyphicon glyphicon-remove&quot; tabclose=&quot;&apos; + id + &apos;&quot;&gt;&lt;/i&gt;&apos;; &#125; title += &apos;&lt;/a&gt;&lt;/li&gt;&apos;; //是否指定TAB内容 if (options.content) &#123; content = &apos;&lt;div role=&quot;tabpanel&quot; class=&quot;tab-pane&quot; id=&quot;&apos; + id + &apos;&quot;&gt;&apos; + options.content + &apos;&lt;/div&gt;&apos;; &#125; else &#123;//没有内容，使用IFRAME打开链接 content = &apos;&lt;div role=&quot;tabpanel&quot; class=&quot;tab-pane&quot; id=&quot;&apos; + id + &apos;&quot;&gt;&lt;iframe src=&quot;&apos; + options.url + &apos;&quot; width=&quot;100%&quot; height=&quot;&apos; + mainHeight + &apos;&quot; frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;yes&quot; allowtransparency=&quot;yes&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&apos;; &#125; //加入TABS $(&quot;.nav-tabs&quot;).append(title); $(&quot;.tab-content&quot;).append(content); &#125; //激活TAB $(&quot;#tab_&quot; + id).addClass(&apos;active&apos;); $(&quot;#&quot; + id).addClass(&quot;active&quot;);&#125;;var closeTab = function (id) &#123; //如果关闭的是当前激活的TAB，激活他的前一个TAB if ($(&quot;li.active&quot;).attr(&apos;id&apos;) == &quot;tab_&quot; + id) &#123; $(&quot;#tab_&quot; + id).prev().addClass(&apos;active&apos;); $(&quot;#&quot; + id).prev().addClass(&apos;active&apos;); &#125; //关闭TAB $(&quot;#tab_&quot; + id).remove(); $(&quot;#&quot; + id).remove();&#125;;$(function () &#123; mainHeight = $(document.body).height() - 45; $(&apos;.main-left,.main-right&apos;).height(mainHeight); $(&quot;[addtabs]&quot;).click(function () &#123; addTabs(&#123; id: $(this).attr(&quot;id&quot;), title: $(this).attr(&apos;title&apos;), close: true &#125;); &#125;); $(&quot;.nav-tabs&quot;).on(&quot;click&quot;, &quot;[tabclose]&quot;, function (e) &#123; id = $(this).attr(&quot;tabclose&quot;); closeTab(id); &#125;);&#125;); 那么，在什么时候调用Addtabs方法呢？答案是注册菜单click事件的时候，这部分代码在前面sidebar-menu组件封装的时候就有，可以看看上面。 如果大家还想深入学习，可以点击这里进行学习，再为大家附两个精彩的专题：Bootstrap学习教程 Bootstrap实战教程 以上就是bootstrap ace模板的菜单和Tab页效果的展示，总的来说，基本的功能具备了，但菜单的样式还有待调整，比如点击某个菜单之后，点击的菜单需要给一个选中的状态。如果你的项目也是用的bootstrap风格，研究下ace模板，可以使用起来试试。","categories":[],"tags":[]},{"title":"欢迎使用Markdown编辑器写博客","slug":"CSDN-markdown","date":"2017-10-12T10:42:14.847Z","updated":"2017-10-13T02:38:16.162Z","comments":true,"path":"2017/10/12/CSDN-markdown/","link":"","permalink":"https://github.com/Jermyo/blog.git/2017/10/12/CSDN-markdown/","excerpt":"","text":"欢迎使用Markdown编辑器写博客本Markdown编辑器使用StackEdit修改而来，用它写博客，将会带来全新的体验哦： Markdown和扩展Markdown简洁的语法 代码块高亮 图片链接和图片上传 LaTex数学公式 UML序列图和流程图 离线写博客 导入导出Markdown文件 丰富的快捷键 快捷键 加粗 Ctrl + B 斜体 Ctrl + I 引用 Ctrl + Q 插入链接 Ctrl + L 插入代码 Ctrl + K 插入图片 Ctrl + G 提升标题 Ctrl + H 有序列表 Ctrl + O 无序列表 Ctrl + U 横线 Ctrl + R 撤销 Ctrl + Z 重做 Ctrl + Y Markdown及扩展 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— [ 维基百科 ] 使用简单的符号标识不同的标题，将某些文字标记为粗体或者斜体，创建一个链接等，详细语法参考帮助？。 本编辑器支持 Markdown Extra , 扩展了很多好用的功能。具体请参考Github. 表格Markdown Extra 表格语法： 项目 价格 Computer $1600 Phone $12 Pipe $1 可以使用冒号来定义对齐方式： 项目 价格 数量 Computer 1600 元 5 Phone 12 元 12 Pipe 1 元 234 ###定义列表 Markdown Extra 定义列表语法：项目１项目２: 定义 A: 定义 B 项目３: 定义 C : 定义 D &gt; 定义D内容 代码块代码块语法遵循标准markdown代码，例如：12345678910@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' ###脚注生成一个脚注[^footnote]. [^footnote]: 这里是 脚注 的 内容. 目录用 [TOC]来生成目录： [TOC] 数学公式使用MathJax渲染LaTex 数学公式，详见math.stackexchange.com. 行内公式，数学公式为：$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$。 块级公式： $$ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$ 更多LaTex语法请参考 这儿. UML 图:可以渲染序列图： 123张三-&gt;李四: 嘿，小四儿, 写博客了没?Note right of 李四: 李四愣了一下，说：李四--&gt;张三: 忙得吐血，哪有时间写。 或者流程图： 12345678st=&gt;start: 开始e=&gt;end: 结束op=&gt;operation: 我的操作cond=&gt;condition: 确认？st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 关于 序列图 语法，参考 这儿, 关于 流程图 语法，参考 这儿. 离线写博客即使用户在没有网络的情况下，也可以通过本编辑器离线写博客（直接在曾经使用过的浏览器中输入write.blog.csdn.net/mdeditor即可。Markdown编辑器使用浏览器离线存储将内容保存在本地。 用户写博客的过程中，内容实时保存在浏览器缓存中，在用户关闭浏览器或者其它异常情况下，内容不会丢失。用户再次打开浏览器时，会显示上次用户正在编辑的没有发表的内容。 博客发表后，本地缓存将被删除。 用户可以选择 把正在写的博客保存到服务器草稿箱，即使换浏览器或者清除缓存，内容也不会丢失。 注意：虽然浏览器存储大部分时候都比较可靠，但为了您的数据安全，在联网后，请务必及时发表或者保存到服务器草稿箱。 浏览器兼容 目前，本编辑器对Chrome浏览器支持最为完整。建议大家使用较新版本的Chrome。 IE９以下不支持 IE９，１０，１１存在以下问题 不支持离线功能 IE9不支持文件导入导出 IE10不支持拖拽文件导入","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-10-11T02:03:40.030Z","updated":"2017-10-11T02:03:40.030Z","comments":true,"path":"2017/10/11/hello-world/","link":"","permalink":"https://github.com/Jermyo/blog.git/2017/10/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"MiHo-主题安装和配置详情","slug":"installation-configuration","date":"2017-07-31T16:00:00.000Z","updated":"2017-09-16T11:48:16.000Z","comments":true,"path":"2017/08/01/installation-configuration/","link":"","permalink":"https://github.com/Jermyo/blog.git/2017/08/01/installation-configuration/","excerpt":"","text":"一. 主题简介&emsp;&emsp;MiHo 是一款单栏响应式的Hexo主题；基于 Hexo 3.0+ 制作，兼容移动端浏览；主题的代码托管在GitHub上，欢迎Star和Fork；如遇到问题或发表建议，可以提Issues，也可以在博客中留言给我，另外,喜欢的话不妨给个 Star。 二. 安装2.1 安装主题1$ git clone https://github.com/WongMinHo/hexo-theme-miho.git themes/miho MiHo 主题需要Hexo 3.0或以上版本，请先升级。 2.2 更新12cd themes/mihogit pull 2.3 依赖安装如下依赖如果已经安装，请看配置介绍。 Json-content生成站点文章静态数据，用于站内搜索。1npm install hexo-generator-json-content --save 三. 站点配置站点配置文件_config.yml在hexo根目录下。 3.1 启用主题1`theme: miho` 3.2 网站基本配置以下配置是站点的全局配置，更多配置，请查看123456title: MinHow's Blogsubtitle: 网站副标题description: 专注 WEB 开发的技术博客author: MinHowlanguage: 网站使用的语言timezone: 网站时区 3.3 jsonContent配置详细的配置请查看hexo-generator-json-content123456789101112131415161718jsonContent: meta: false pages: false posts: title: true date: true path: true text: false raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: false 四. 主题配置编辑主题配置文件，themes/miho/_config.yml。 4.1 属性下面将介绍几个比较重要的配置。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122# hexo-theme-miho# https://github.com/wongminho/hexo-theme-miho# Favicon of your site | 网站iconfavicon: /favicon.ico# Header# Keywords of your site | 网站关键字keywords: MinHow,MinHow's Blog# Head headline | 头部标题header_title: MinHow's Blog# Head description | 头部描述header_description: 一个专注 WEB 开发的技术博客# Link to your logo | logo地址logo: images/logo.png# Link to your banner_img | 首页banner图地址banner_img: images/banner.jpg# Menu setting | 菜单设置# name: Font Awesome icon | Font Awesome 图标# title: Home Title | 标题# url: //minhow.com Url, absolute or relative path | 链接，绝对或相对路径# target: true Whether to jump out | 是否跳出menu: home: title: Home url: / target: false archive: title: Archives url: /archives target: false user: title: About url: /about target: false# Social setting, use to display social information | 社交设置，用来展示社交信息# name: Font Awesome icon | Font Awesome 图标# title: Home Icon title | 图标标题# url: //minhow.com Url, absolute or relative path | 链接，绝对或相对路径# target: true Whether to jump out | 是否跳出social: home: title: MinHow url: //minhow.com target: true github: title: Github url: //github.com/wongminho target: true weibo: title: Weibo url: //weibo.com/WongMinHo target: true twitter: title: Twitter url: //twitter.com/huangminhow target: true #qq: #weixin: #snapchat: #telegram: #mail: #facebook: #google: #linkedin:# Content# Excerpt length | 摘录长度excerpt_length: 190# Excerpt link | 摘录链接excerpt_link: more&gt;&gt;# New window open link | 新窗口打开文章open_new_link: false# Article default cover picture，size：350*150 | 文章默认封面图，尺寸：350*150cover_picture: images/banner.jpg# Open background particles | 开启背景粒子open_bg_particle: true# Open animation in homepage and head | 开启主页及头部动画open_animation: true# Article# Open toc | 是否开启toctoc: true# Open share | 是否开启分享share: true# Style customization | 样式定制style: # Main color tone | 主色调 main_color: '#0cc'# Comments | 评论# 畅言，输入appid和appkeychangyan_appid: falsechangyan_appkey: false# 友言，输入idyouyan_id: false# disqusdisqus: false# Analytics | 分析# 站长分析，输入站点idcnzz_analytics: false# 百度分析，输入key值baidu_analytics: false# google analytics | google分析google_analytics: false# Footer# Access statistics | “不蒜子”访问量统计access_counter: on: true site_uv: 总访客数： site_pv: 总访问量：# Copyright Information | 版权信息copyright: 2017 MinHow 4.2 文章封面图文章默认封面图，尺寸：350*150，当文章基本配置没有cover_picture时才显示。1cover_picture: images/banner.jpg 4.3 开启背景粒子是否开启背景粒子。1open_bg_particle: true 4.4 开启主页及头部动画是否开启主页及头部动画。1open_animation: true 4.5 评论支持畅言、disqus。1234567# 畅言，输入appid和appkeychangyan_appid: falsechangyan_appkey: false# 友言，输入idyouyan_id: false# disqusdisqus: false 4.6 数据统计支持站长、百度、google三种数据统计，正确填写配置信息即可。123456# 站长分析，输入站点idcnzz_analytics: false# 百度分析，输入key值baidu_analytics: false# google分析google_analytics: false 4.7 文章基本配置123456789101112---title: Hello Worlddate: 2017-06-18categories: Firstauthor: MinHowtags: - First - Secondcover_picture: /images/banner.jpg--- MinHow-This is a summary&lt;!-- more --&gt; 说明： 需要注意tags和摘要的写法，不然首页不能正确显示标签和摘要； cover_picture文章封面图，不填默认显示_config.yml配置的图片。","categories":[{"name":"开源项目","slug":"开源项目","permalink":"https://github.com/Jermyo/blog.git/categories/开源项目/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://github.com/Jermyo/blog.git/tags/博客/"},{"name":"开源项目","slug":"开源项目","permalink":"https://github.com/Jermyo/blog.git/tags/开源项目/"}]}]}